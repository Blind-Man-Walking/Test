--====================================================================================
--[[ 							STANDALONE ESP SCRIPT 							]]
--====================================================================================

-- This script provides ESP (Extra Sensory Perception) for the game Murder Mystery 2.
-- It will highlight players, show their name, role, and distance.

--====================================================================================
--[[ 							CORE SERVICES AND VARIABLES 						]]
--====================================================================================

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer

-- This table will store all the created ESP objects for each player.
local playerEspObjects = {}

-- This table will be updated with role information from the server.
local serverRoles = {}

-- A container in CoreGui to keep all ESP elements organized.
local ESP_CONTAINER = Instance.new("Folder", CoreGui)
ESP_CONTAINER.Name = "BlindHub_ESP_Container"

--====================================================================================
--[[ 							ESP HELPER FUNCTIONS 							]]
--====================================================================================

-- Define the colors for each role.
local roleColors = {
	Murderer = Color3.new(1, 0.2, 0.2),  -- Red
	Sheriff = Color3.new(0.2, 0.4, 1),   -- Blue
	Innocent = Color3.new(0.2, 1, 0.2),  -- Green
	Constant = Color3.new(0, 0, 0),      -- Black (for no role/lobby)
	Default = Color3.new(0, 0, 0)        -- Black (fallback)
}

-- Function to get a player's role based on server data.
local function getPlayerRole(player)
	if not player or not player.Parent then return "Default" end
	
	local roleInfo = serverRoles and serverRoles[player.Name]
	if roleInfo and roleInfo.Role and roleInfo.Role ~= "" then
		return roleInfo.Role
	else
		return "Constant"
	end
end

-- Function to remove all ESP elements for a specific player.
local function cleanupEspForPlayer(player)
	if playerEspObjects[player] then
		for _, obj in pairs(playerEspObjects[player]) do
			if obj and obj.Parent then
				obj:Destroy()
			end
		end
		playerEspObjects[player] = nil
	end
end

-- Function to create the visual ESP elements for a player.
local function createEspForPlayer(player)
	local character = player.Character
	if not character then return end
	
	local head = character:FindFirstChild("Head")
	if not head then return end

	-- Don't recreate if they already exist.
	if playerEspObjects[player] then return end

	local esp = {}
	
	-- Create the body highlight.
	esp.Highlight = Instance.new("Highlight", ESP_CONTAINER)
	esp.Highlight.Adornee = character
	esp.Highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	esp.Highlight.FillTransparency = 0.7
	esp.Highlight.OutlineTransparency = 0.2
	esp.Highlight.Enabled = true

	-- Create the BillboardGui for name and distance tags.
	esp.NameTag = Instance.new("BillboardGui", ESP_CONTAINER)
	esp.NameTag.Adornee = head
	esp.NameTag.Size = UDim2.new(0, 120, 0, 60)
	esp.NameTag.StudsOffset = Vector3.new(0, 2.5, 0)
	esp.NameTag.AlwaysOnTop = true
	esp.NameTag.Enabled = true

	-- Create the TextLabel for the player's name.
	local nameLabel = Instance.new("TextLabel", esp.NameTag)
	nameLabel.Name = "NameLabel"
	nameLabel.Text = player.Name
	nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
	nameLabel.BackgroundTransparency = 1
	nameLabel.Font = Enum.Font.SourceSansBold
	nameLabel.TextSize = 18
	nameLabel.TextStrokeTransparency = 0.5
	
	-- Create the TextLabel for the distance.
	local distLabel = Instance.new("TextLabel", esp.NameTag)
	distLabel.Name = "DistLabel"
	distLabel.Size = UDim2.new(1, 0, 0.5, 0)
	distLabel.Position = UDim2.new(0, 0, 0.5, 0)
	distLabel.BackgroundTransparency = 1
	distLabel.Font = Enum.Font.SourceSans
	distLabel.TextSize = 16
	distLabel.TextStrokeTransparency = 0.5
	
	playerEspObjects[player] = esp
end
	
--====================================================================================
--[[ 							   MAIN ESP UPDATE LOOP 							]]
--====================================================================================

-- This loop runs every frame to keep the ESP updated.
local espUpdateConn = RunService.RenderStepped:Connect(function()
	local localRoot = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	local getPlayerData = ReplicatedStorage:FindFirstChild("GetPlayerData", true)
	
	-- Fetch the latest role data from the server.
	if getPlayerData then
		local success, roles = pcall(getPlayerData.InvokeServer, getPlayerData)
		if success and type(roles) == "table" then
			serverRoles = roles
		end
	end

	local activeEspPlayers = {}

	-- Iterate through all players in the game.
	for _, player in ipairs(Players:GetPlayers()) do
		if player == LocalPlayer then continue end

		local character = player.Character
		local head = character and character:FindFirstChild("Head")
		local targetRoot = character and character:FindFirstChild("HumanoidRootPart")

		-- Check if the player is alive and has a character.
		if character and head and targetRoot and localRoot then
			activeEspPlayers[player] = true

			-- If ESP objects don't exist for this player, create them.
			if not playerEspObjects[player] then
				createEspForPlayer(player)
			end

			local esp = playerEspObjects[player]
			if esp then
				-- Make sure the ESP is attached to the correct character parts (handles respawning).
				if esp.Highlight.Adornee ~= character then esp.Highlight.Adornee = character end
				if esp.NameTag.Adornee ~= head then esp.NameTag.Adornee = head end
				
				-- Get the player's role and set the ESP color.
				local role = getPlayerRole(player)
				local espColor = roleColors[role] or roleColors.Default

				-- Update Highlight
				esp.Highlight.FillColor = espColor
				esp.Highlight.OutlineColor = espColor

				-- Update Name and Distance Labels
				local nameLabel = esp.NameTag:FindFirstChild("NameLabel")
				local distLabel = esp.NameTag:FindFirstChild("DistLabel")

				if nameLabel then
					nameLabel.TextColor3 = espColor
				end
				
				if distLabel then
					distLabel.TextColor3 = espColor
					local distance = (localRoot.Position - targetRoot.Position).Magnitude
					distLabel.Text = string.format("[%d m]", distance)
				end
			end
		end
	end

	-- Clean up ESP for any players who are no longer active (left the game, etc.).
	for player, esp in pairs(playerEspObjects) do
		if not activeEspPlayers[player] then
			cleanupEspForPlayer(player)
		end
	end
end)

-- Cleanup when the local player leaves.
Players.PlayerRemoving:Connect(function(player)
	if player == LocalPlayer then
		if espUpdateConn and espUpdateConn.Connected then
			espUpdateConn:Disconnect()
		end
		ESP_CONTAINER:Destroy()
	else
		cleanupEspForPlayer(player)
	end
end)
